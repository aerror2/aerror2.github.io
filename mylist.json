{"code":200,"message":"success","traceId":"7751eab1-380c-4cb1-8709-3477899eed43","data":{"list":[{"articleId":148590656,"title":"如何正确的用Trae 打开 Unity 3D 项目","description":"如何正确的用Trae 打开 Unity 3D 项目","url":"https://blog.csdn.net/aerror/article/details/148590656","type":1,"top":false,"forcePlan":false,"viewCount":498,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148590656","postTime":"2025-06-11 17:33:27","diggCount":8,"formatTime":"2025.06.11","picList":["https://i-blog.csdnimg.cn/direct/e98f52f0d8894e72a0697d68f209e0e0.png"],"collectCount":4,"tags":["unity","3d","游戏引擎"],"hasInsCode":false},{"articleId":148579554,"title":"BLHeli电调使用遥控器摇杆进行参数设置指南","description":"介绍了RX42BL接收器集成标准BLHELI电调，使用遥控器进行参数修改的方法， 提供11个可调参数（如0-30度换向时序）","url":"https://blog.csdn.net/aerror/article/details/148579554","type":1,"top":false,"forcePlan":false,"viewCount":836,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148579554","postTime":"2025-06-11 11:19:27","diggCount":6,"formatTime":"2025.06.11","picList":["https://i-blog.csdnimg.cn/direct/e377e039b21c4e67b1386d4dba90680f.png"],"collectCount":5,"tags":["单片机"],"hasInsCode":false},{"articleId":148561198,"title":"使用mpu6500/6050, PID，互补滤波实现一个简单的飞行自稳控制系统","description":"使用mpu6500, PID，互补滤波实现一个简单的自稳控制系统","url":"https://blog.csdn.net/aerror/article/details/148561198","type":1,"top":false,"forcePlan":false,"viewCount":490,"commentCount":1,"editUrl":"https://mp.csdn.net/console/editor/html/148561198","postTime":"2025-06-10 16:36:31","diggCount":5,"formatTime":"2025.06.10","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/47140242143dc1a5747f0ffb9ebf5538.png"],"collectCount":8,"tags":["单片机","飞控"],"hasInsCode":false},{"articleId":148479782,"title":"使用pwm控制舵机来回摆动的中心位置","description":"本文实现了一个基于PWM控制的舵机摆动模拟器，使用tkinter创建可视化界面。通过PWM信号（1000-2000）控制舵机在±45度范围内摆动，其中1500对应中心位置。系统采用滑动条输入PWM值，实时计算目标角度并动态更新摆臂位置，同时显示红色虚线标记摆动范围。程序包含角度转换、边界检测和摆动速度控制功能，模拟了舵机根据PWM信号平滑移动到目标位置的过程。该模拟器可直观展示PWM与舵机角度间的映射关系。","url":"https://blog.csdn.net/aerror/article/details/148479782","type":1,"top":false,"forcePlan":false,"viewCount":263,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148479782","postTime":"2025-06-06 18:01:34","diggCount":3,"formatTime":"2025.06.06","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":0,"tags":["python","算法","linux","单片机"],"hasInsCode":false},{"articleId":148479167,"title":"使用pwm控制一个舵机摆动的速度","description":"控制舵机摆动速度的关键在于利用PWM间接调节。由于舵机角速度固定且与角度差成正比，可通过以下方法实现速度控制：1)初始化PWM与舵机角度同步；2)按指定速度定时计算角度增量并更新PWM值（如每0.02秒更新）；3)加入启动时间补偿。具体实现时，根据设定速度计算角度增量，进行边界检测和方向反转，最终转换为目标PWM值输出。示例代码展示了如何通过计算deltaAngle实现舵机匀速摆动，其中涉及角度到PWM的转换公式（1500+(angle/0.09)）。","url":"https://blog.csdn.net/aerror/article/details/148479167","type":1,"top":false,"forcePlan":false,"viewCount":248,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148479167","postTime":"2025-06-06 17:36:52","diggCount":1,"formatTime":"2025.06.06","picList":[],"collectCount":0,"tags":["单片机"],"hasInsCode":false},{"articleId":148477228,"title":"使用python写一个虚拟的舵机模拟器","description":"摘要：这是一个用Python tkinter开发的舵机摆动模拟器，用于调试舵机控制代码。模拟器包含一个SwingArm类模拟舵机运动（固定速度180度/秒），通过滑动条输入PWM信号（1000-2000对应-45°至45°）。GUI显示当前角度和摆臂位置，每50ms更新一次状态。使用前需安装python-tk，主要功能包括：PWM到角度转换、平滑角度过渡和实时可视化。该工具便于开发者测试舵机控制算法而无需实际硬件。","url":"https://blog.csdn.net/aerror/article/details/148477228","type":1,"top":false,"forcePlan":false,"viewCount":302,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148477228","postTime":"2025-06-06 16:17:00","diggCount":8,"formatTime":"2025.06.06","picList":[],"collectCount":3,"tags":["python","开发语言","算法"],"hasInsCode":false},{"articleId":148381595,"title":"萝莉Loli双向有刷电调源代码 SDCC 版本","description":"本文介绍了基于STC15单片机的双路电机控制代码移植和优化过程。原始代码是为Keil51设计的，作者将其修改为可兼容SDCC编译器的版本，适用于macOS系统。主要修改包括：寄存器声明方式调整、IO引脚定义重映射、位操作优化为位域处理，并添加了Makefile和调试工具。代码实现了两路PWM电机控制，包含信号检测、混控算法、摩擦力补偿和死区处理等功能，通过10μs定时器中断实现100级分辨率的软件PWM控制。移植后的代码保留了原有功能，包括上电自检、失联保护、非线性映射补偿等特性，适用于机器人或遥控车等应用","url":"https://blog.csdn.net/aerror/article/details/148381595","type":1,"top":false,"forcePlan":false,"viewCount":177,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148381595","postTime":"2025-06-02 14:13:41","diggCount":2,"formatTime":"2025.06.02","picList":[],"collectCount":0,"tags":["单片机"],"hasInsCode":false},{"articleId":148318063,"title":"Futaba乐迪小飞象Frsky7通多协议接收机KA6说明书","description":"支持FRSKY D8的遥控，如 DJT, DHT,XJT , TANDEM X12,X14,X18SE,X20, X20RS, XE,TWIN X LITE,Taranis,X-Lite s/pro,TARANIS X7,X9D, X9D plus, X9D Plus SE, horus x10 ,horus x10s。3. 对码时，要保持接收机和遥控器0.5米以上，SFHSS，乐迪和小飞象静待1分钟左右，Frsky D8 按下对码按钮，看到指示灯快闪然后保持长亮就对好码了。， FRSKY D8则将是。","url":"https://blog.csdn.net/aerror/article/details/148318063","type":1,"top":false,"forcePlan":false,"viewCount":464,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/148318063","postTime":"2025-05-29 22:00:16","diggCount":5,"formatTime":"2025.05.29","picList":["https://i-blog.csdnimg.cn/direct/aea28c8504904ff9a409780a56bdc30b.png"],"collectCount":5,"tags":["规格说明书"],"hasInsCode":false},{"articleId":147253659,"title":"解决PIP 安装出错ERROR: cp310-cp310-manylinux_2_28_x86_64.whl is not a supported wheel","description":"把whl的文件名改一下。发现，刚好少了2_28。","url":"https://blog.csdn.net/aerror/article/details/147253659","type":1,"top":false,"forcePlan":false,"viewCount":454,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/147253659","postTime":"2025-04-15 16:56:57","diggCount":2,"formatTime":"2025.04.15","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/671f42ab07fd990f949a1c903140dd83.png"],"collectCount":0,"tags":["pip","python","开发语言"],"hasInsCode":false},{"articleId":146942187,"title":"如何在huggingface安装指定的版本的transformer","description":"2.要安装指定版本，那么需要在 URL 加一个@加上commit id , 如。commit/后就是这个commit的id了。3. commit id 到。1.安装最新，一般是这样。，如下图复制链接地址。","url":"https://blog.csdn.net/aerror/article/details/146942187","type":1,"top":false,"forcePlan":false,"viewCount":380,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146942187","postTime":"2025-04-02 13:16:18","diggCount":1,"formatTime":"2025.04.02","picList":[],"collectCount":0,"tags":["transformer","深度学习","人工智能"],"hasInsCode":false},{"articleId":146589557,"title":"如何在ms-swift 微调训练deepseekvl2时使用sageattention","description":"1.本质上sageattention是sdpa，SDPA的全称为Scaled Dot-Product Attention, 属于乘性注意力机制， 简单一句话来说就是，根据Query (Q)与Key之间的匹配度来对Value进行加权，而事实上不管是Query, Key还是Value都来自于输入，因此所谓的SDPA本质上是对输入信息信息进行重组。因此，deepseekvl2无法直接简单使用sageattion,我们需要改一下deepseek的开源代码，才有可能用上sageattion.","url":"https://blog.csdn.net/aerror/article/details/146589557","type":1,"top":false,"forcePlan":false,"viewCount":475,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146589557","postTime":"2025-03-28 11:22:07","diggCount":4,"formatTime":"2025.03.28","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/671f42ab07fd990f949a1c903140dd83.png"],"collectCount":9,"tags":["深度学习","机器学习","人工智能"],"hasInsCode":false},{"articleId":146255478,"title":"Stable Diffusion API /sdapi/v1/txt2img的完整参数列表及其说明","description":"【代码】Stable Diffusion API /sdapi/v1/txt2img的完整参数列表及其说明。","url":"https://blog.csdn.net/aerror/article/details/146255478","type":1,"top":false,"forcePlan":false,"viewCount":755,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146255478","postTime":"2025-03-14 13:42:30","diggCount":4,"formatTime":"2025.03.14","picList":[],"collectCount":5,"tags":["stable diffusion"],"hasInsCode":false},{"articleId":146208818,"title":"关于MCP SSE 服务器的工作原理","description":"2. MCP SSE Client会发起多个连接，但是第一个连接是http://yourhost:port/sse,  这个连接是沟通的第一步，它会使用chunked的回传数据，意思是不告诉client这个数据有多少，这样就它就可以一直连着了。但是sse的方式叫cursor 干始终不成功， 找了一轮，发现youtube的教程视频里主持，也没有搞定sse的服务器，balahblah说了一堆，就要move on ....于是研究了一下。跟着就是ping包的返回，防止client死了。","url":"https://blog.csdn.net/aerror/article/details/146208818","type":1,"top":false,"forcePlan":false,"viewCount":1928,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146208818","postTime":"2025-03-12 17:19:24","diggCount":4,"formatTime":"2025.03.12","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":8,"tags":["AI编程"],"hasInsCode":false},{"articleId":145446163,"title":"JETFAY RX121BR 多协议小比例静改动接收机说明书","description":"0.3g3.3-6V内置12种无线协议,支持FUTABA,RADIOLINK,DUMBORC,FRSKY,FLYSKY,MC6C,WFLY2等，内置联动，多种控制方式，3通及以上都可全部控制。最大电流1.8A，一路有6个输出模式可选，可以输出多路标准PWM，电调PWM, SBUS和PPM。0402/0603LED, 总电流不可超600毫安，每路可接2-3个LED.电压，信号强度，丢包率，仅部分协议支持，如RADIOLINK,DUMBORC, FLYSKY,WLFY2等。","url":"https://blog.csdn.net/aerror/article/details/145446163","type":1,"top":false,"forcePlan":false,"viewCount":1037,"commentCount":2,"editUrl":"https://mp.csdn.net/console/editor/html/145446163","postTime":"2025-03-10 23:57:20","diggCount":9,"formatTime":"2025.03.10","picList":["https://i-blog.csdnimg.cn/direct/9fbd106c633c494d804bc8a7ad580ec0.png"],"collectCount":29,"tags":["json"],"hasInsCode":false},{"articleId":146114567,"title":"shell使用指定任意字符串分割和截取","description":"【代码】shell使用指定任意字符串分割和截取。","url":"https://blog.csdn.net/aerror/article/details/146114567","type":1,"top":false,"forcePlan":false,"viewCount":134,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146114567","postTime":"2025-03-08 12:50:42","diggCount":1,"formatTime":"2025.03.08","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":0,"tags":["linux","服务器","运维"],"hasInsCode":false},{"articleId":146066627,"title":"VsCode/Cursor workbench.desktop.main.js 的入口","description":"这个也是main函数开始的，下面就是最后一行代码，表示export出rSo 函数作为它的名字公开为main, 和dll export表有点像了。nSO是一个类，应该是就是workbenchMain了。","url":"https://blog.csdn.net/aerror/article/details/146066627","type":1,"top":false,"forcePlan":false,"viewCount":511,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146066627","postTime":"2025-03-06 13:04:42","diggCount":1,"formatTime":"2025.03.06","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/c1bd51402d063434fcdb734d9f3a7706.png"],"collectCount":0,"tags":["vscode","javascript","ide"],"hasInsCode":false},{"articleId":146049595,"title":"Visual Studio Code或Cursor的workbench.desktop.main.js的完整性校验的原理","description":"修改workbench.desktop.main.js，再打开app,就会提交安装似乎已经损坏的提示。它是使用sha256，然后base64来检查的。","url":"https://blog.csdn.net/aerror/article/details/146049595","type":1,"top":false,"forcePlan":false,"viewCount":327,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/146049595","postTime":"2025-03-05 18:11:47","diggCount":3,"formatTime":"2025.03.05","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/bef61b5f4f3ed440c387bb74ec57fdcb.png"],"collectCount":0,"tags":["javascript","vscode","前端"],"hasInsCode":false},{"articleId":145608401,"title":"搭建一个本地DeepSeek r1 14B配置低到惊喜！附超简单步骤","description":"发现只需要11G显存！只使用一张rtx3060 12G的就搞定了。速度和答案质量还不错，太令人惊喜了！7B只需要5GB的显存。","url":"https://blog.csdn.net/aerror/article/details/145608401","type":1,"top":false,"forcePlan":false,"viewCount":361,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145608401","postTime":"2025-02-13 11:40:28","diggCount":1,"formatTime":"2025.02.13","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":0,"tags":["人工智能"],"hasInsCode":false},{"articleId":145468061,"title":"c语言使用通配符取一个目录下符合规则的所有文件的最简单办法","description":"其实很多种办法，可以使用dir相关的函数把文件都枚举出来，然后使用正则表达式，这个是我之前的做法。如此简单，没有想到吧？","url":"https://blog.csdn.net/aerror/article/details/145468061","type":1,"top":false,"forcePlan":false,"viewCount":144,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145468061","postTime":"2025-02-06 10:32:34","diggCount":1,"formatTime":"2025.02.06","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/e8ea92f580f30873eef61616bc0e4bf2.png"],"collectCount":0,"tags":["c语言","算法","开发语言"],"hasInsCode":false},{"articleId":145439555,"title":"使用deepseek写一个单击，双击和长按的检测函数","description":"DeepSeek好火，注册试用一下：提问：请使用c语言写一个函数，输入参数是是为： A为当前的输入量，1000-2000，根据它的变化， B为当前这个输入量的状态数据结构， 函数检查这个A，判断它的变化，从而判断用户是单击还双击，还是长按。具体当A变化量大于300时认为是开始了有效的点击，这时认为是按下按钮，记录变化前的值为C ，当A变回和C差值只有50左右时，认为释放按钮。已深度思考（用时 272 秒）","url":"https://blog.csdn.net/aerror/article/details/145439555","type":1,"top":false,"forcePlan":false,"viewCount":661,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145439555","postTime":"2025-02-04 13:17:26","diggCount":12,"formatTime":"2025.02.04","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":7,"tags":["算法","linux","运维"],"hasInsCode":false},{"articleId":145428356,"title":"Macos编译openjdk因berkeley-db版本问题失败解决办法","description":"看来是优先使用/usr/local下的头文件了， 简单处理一下，看起来brew也有多份，直接删除一下/usr/local下的db.h及相关的头文件。原因是berkeley-db最新的版本这个get的定义是多一个DB_TXN的参数，看名字是用于事务处理的。一开始以为是版本低了，upgrade了一下没有解决，后来找了一下xcode目录下,也有一个db.h。同时get这个函数看起来也刚好是只有四个参数，打开看了一下，好像比较老的，然后再编译，顺利通过。","url":"https://blog.csdn.net/aerror/article/details/145428356","type":1,"top":false,"forcePlan":false,"viewCount":647,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145428356","postTime":"2025-02-03 11:16:00","diggCount":2,"formatTime":"2025.02.03","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c1354b6aa25593ad25c55191fc96eeb.png"],"collectCount":5,"tags":["macos"],"hasInsCode":false},{"articleId":145338809,"title":"snappy简单测试","description":"snappy是一个比较快的压缩算法，没有cli， 需要自己写一个。","url":"https://blog.csdn.net/aerror/article/details/145338809","type":1,"top":false,"forcePlan":false,"viewCount":168,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145338809","postTime":"2025-01-24 11:30:46","diggCount":2,"formatTime":"2025.01.24","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/e658252d918e15d0df73656bca64a96f.png"],"collectCount":0,"tags":["xcode","macos","ide"],"hasInsCode":false},{"articleId":145323851,"title":"cannot locate symbol “_ZTTNSt6__ndk114basic_ofstreamIcNS_11char_traitsIcEEEE“ 的解决办法","description":"使用clang++编译出来的android程序，实际真机运行出现 cannot locate symbol \"_ZTTNSt6__ndk114basic_ofstreamIcNS_11char_traitsIcEEEE\" referenced by。重新上传，运行ok.","url":"https://blog.csdn.net/aerror/article/details/145323851","type":1,"top":false,"forcePlan":false,"viewCount":356,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145323851","postTime":"2025-01-23 15:06:35","diggCount":3,"formatTime":"2025.01.23","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/671f42ab07fd990f949a1c903140dd83.png"],"collectCount":0,"tags":["人工智能"],"hasInsCode":false},{"articleId":145321646,"title":"Macos交叉编译android的cmix压缩算法","description":"LFLAGS和CC改一下，注释的是原来的内容。然后执行make就可以了。","url":"https://blog.csdn.net/aerror/article/details/145321646","type":1,"top":false,"forcePlan":false,"viewCount":770,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145321646","postTime":"2025-01-23 13:10:21","diggCount":1,"formatTime":"2025.01.23","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/b15c6791119fa1bec4afe2397d081db0.png"],"collectCount":0,"tags":["android"],"hasInsCode":false},{"articleId":145319677,"title":"Macos下交叉编译安卓的paq8px压缩算法 ","description":"修改paq8px/CMakeLists.txt, 如下，去掉clang++不支持的-march=nocona和-floop-strip-mine。稍旧的ndk并不能编译成功，需要下载最新的ndkr27c, 最后是使用clang来编译。官方没有android的编译方法，自己编写脚本在macos下交叉编译.编译build.sh。","url":"https://blog.csdn.net/aerror/article/details/145319677","type":1,"top":false,"forcePlan":false,"viewCount":716,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145319677","postTime":"2025-01-23 10:56:01","diggCount":3,"formatTime":"2025.01.23","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/b15c6791119fa1bec4afe2397d081db0.png"],"collectCount":0,"tags":["macos","android"],"hasInsCode":false},{"articleId":145304045,"title":"从根源分析，调试，定位和解决MacOS ld: unsupported tapi file type ‘!tapi-tbd‘ in YAML file","description":"发现是最后一个spam是调用/usr/local/Cellar/gcc/14.2.0_1/bin/../libexec/gcc/x86_64-apple-darwin20/14/collect2。这个anaconda的ld和系统的是不匹配的，但是它为了penv把这个替换了，结果collect2使用了它设置的工具链的ld. 然后引起这个问题。本文希望可以帮到需要的人，还是不人遇到这个的，可能原因不大一样，但是这个文章把debug和定位的方法和原理都告诉大家了，祝大好运！看起来好了，再试试编译。","url":"https://blog.csdn.net/aerror/article/details/145304045","type":1,"top":false,"forcePlan":false,"viewCount":711,"commentCount":4,"editUrl":"https://mp.csdn.net/console/editor/html/145304045","postTime":"2025-01-22 16:09:27","diggCount":2,"formatTime":"2025.01.22","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":1,"tags":["前端","javascript","macos"],"hasInsCode":false},{"articleId":145283786,"title":"强制让cmake使用指定编译器如某个版本的gcc 和g++","description":"可以定义CC和CXX ,不过还是使用cmake本身的宏定义比较好。","url":"https://blog.csdn.net/aerror/article/details/145283786","type":1,"top":false,"forcePlan":false,"viewCount":250,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145283786","postTime":"2025-01-21 14:54:06","diggCount":3,"formatTime":"2025.01.21","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":0,"tags":["linux","运维","服务器"],"hasInsCode":false},{"articleId":145225440,"title":"STM32G031G6和STM32F031G6是两个型号，别弄错了啊！","description":"没有道理啊，查文档，对针针脚，查了STM32F031G6的。决定焊第二张，就留ｍｃｕ最简线路，又是一样，没有反应。９．难道ｍｃｕ坏的，焊第三张样板，就留ｍｃｕ最简线路，又是一样，没有反应。买的是STM32G031G6，画图画的是STM32F031G6。１．EDA选了STM32F031G6，画图，４层板，画得我眼都花了，14.我又看了一眼电路原理图，看了一下mcu上的丝标，呃。７．发现没有反应，以来没有焊好，补焊一轮，检查连通性，无果。４．终于等到，开工贴双面，眼又花了，花了数个小时。11.好吧，睡觉。","url":"https://blog.csdn.net/aerror/article/details/145225440","type":1,"top":false,"forcePlan":false,"viewCount":251,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145225440","postTime":"2025-01-18 12:47:55","diggCount":2,"formatTime":"2025.01.18","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/71e05144a4f62a37d7dd57a628cb1961.png"],"collectCount":0,"tags":["stm32","嵌入式硬件","单片机"],"hasInsCode":false},{"articleId":145111741,"title":"IL2CPPDumper符号导入IDA的set_name错误解决","description":"结果，原来是我使用ida使用ida_py3.py是不行了，然后ida.py就好了。看来是python的版本问题。python 版本确实乱。乱到要出一个pyenv管理, anaconda, 很是奇怪的语言。把il2cpp的生成的符号信息导入ida中会有出现以下错误；调了半天，还改了ida_name.py，以为是可变参数问题。这个直接单独执行没有问题。","url":"https://blog.csdn.net/aerror/article/details/145111741","type":1,"top":false,"forcePlan":false,"viewCount":380,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145111741","postTime":"2025-01-14 15:07:51","diggCount":1,"formatTime":"2025.01.14","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/bbaff8dbfaf95ad97389389d60465603.png"],"collectCount":1,"tags":["汇编"],"hasInsCode":false},{"articleId":145139535,"title":"Frida调试il2cpp的程序打印原生c#对象为json","description":"需要配合il2cpp原来程序里的一些json序列化的工具来进行，一般都可以找到，如下面的。MiniJSON.Json，像这个 Serialize到运行时对象就不行了。主要的思路是，输入一个对象，那么使用反射的GetType,  然后使用type的GetFields， 拿到Field的列表，然后遍历field列表。Field是一个抽象类的，这里我使用 RuntimeFieldInfo : RtFieldInfo里面的函数来实现。","url":"https://blog.csdn.net/aerror/article/details/145139535","type":1,"top":false,"forcePlan":false,"viewCount":423,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145139535","postTime":"2025-01-14 15:01:55","diggCount":2,"formatTime":"2025.01.14","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/db3787141d668b1b21ce6510b847fa3b.png"],"collectCount":1,"tags":["c#","json","java"],"hasInsCode":false},{"articleId":145094367,"title":"使用命令行打开CygWin/mintty登录环境变量，并转到对应路径","description":"对于使用sublime text，我在当前编辑所在的文件的路径下打开一个cygwin的命行令窗口，进行命令行操作，这样就很方便了，直接打开，不用再自己cd到当前目录。上一篇使用oldpwd来转目录，也可解决问题，但是其实mintty有一个隐藏的--dir的参数，启动的时候指定即可，发文记录一下。这个打一个cygwin的窗口，登录/bin/sh ，初始化环境变量后，会cd的%cd%这个当前目录。","url":"https://blog.csdn.net/aerror/article/details/145094367","type":1,"top":false,"forcePlan":false,"viewCount":257,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/145094367","postTime":"2025-01-12 16:21:40","diggCount":3,"formatTime":"2025.01.12","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/6c820fa0b7902309f0622e7fd3a773c8.png"],"collectCount":0,"tags":["linux","windows","运维"],"hasInsCode":false},{"articleId":142071059,"title":"万能无线航模模拟器加密狗说明书","description":"在对码模式下，按一下按键会切换一个协议，在12个协议不断循环，请一边按一边观察指示颜色和闪烁的摩斯电码，当你观察到对应的协议，就可以停止按键了，如你需要AHDFS2A富斯二代，你看到指示灯两个紫色就可以了。对码成功后，关闭遥控，加密狗重新上电后，长按按键，指示灯会循环切换模式，观察到需要的模式，如模式二，就是看到每三秒闪两下，松开按键，指标灯会自动快闪重启，切换模式就成功了。使用加密狗上的按钮，选择对应的模拟器的工作模式。对码成功后，关掉遥控，观察指标灯的每3秒闪多少下，就是模式几。具体看FAQ第二节。","url":"https://blog.csdn.net/aerror/article/details/142071059","type":1,"top":false,"forcePlan":false,"viewCount":5499,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/142071059","postTime":"2025-01-08 09:48:33","diggCount":33,"formatTime":"2025.01.08","picList":["https://i-blog.csdnimg.cn/direct/202b026fc7ca47f896d9f83793bcbbc2.png"],"collectCount":37,"tags":["网络"],"hasInsCode":false},{"articleId":144884121,"title":"分享一个C语言写的自动递归创建多层级目录的mkdir","description":"效果就是和mkdir -p 一样了。使用标准的c语言库，可以跨平台使用。","url":"https://blog.csdn.net/aerror/article/details/144884121","type":1,"top":false,"forcePlan":false,"viewCount":180,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144884121","postTime":"2025-01-02 13:11:42","diggCount":2,"formatTime":"2025.01.02","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/e8ea92f580f30873eef61616bc0e4bf2.png"],"collectCount":0,"tags":["c语言","算法","数据结构"],"hasInsCode":false},{"articleId":144866072,"title":"如何使用Sublime Text3和Keil uVision ５协同进行单片机开发","description":"本来一向使用SDCC,后来发现同一套代码工程Keil编译出来的代码小20%左右。但是Keil的IDE和编辑器相当难用，看着极不顺眼。后来发现VScode可以调用Keil来编译。我研究一下了，发现也是可行的。3. 需要安装cywin,然后在sublime上使用我上编文章的cywinmake的buildsystem。4. ctrl+b就可以使用keil来编译了。","url":"https://blog.csdn.net/aerror/article/details/144866072","type":1,"top":false,"forcePlan":false,"viewCount":289,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144866072","postTime":"2025-01-01 13:01:12","diggCount":3,"formatTime":"2025.01.01","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":0,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":144865802,"title":"windows 下如何在sublime Text调用cywin终端，然后执行make进行编译代码","description":"找到cywin的安装目录找到mintty.exe, sublime的菜单Tools新一个buildSysteｍ，回到工作目录，选择这个cywinmake为buildsystem,如上图。填写以上内容，然后保存为cywinmake.sublime-build。sublime会帮你新建个文件叫 ＊ｓｕｂｌｉｍｅ－ｂｕｉｌｄ。ctrl+B就可以编译了。","url":"https://blog.csdn.net/aerror/article/details/144865802","type":1,"top":false,"forcePlan":false,"viewCount":204,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144865802","postTime":"2025-01-01 12:43:19","diggCount":2,"formatTime":"2025.01.01","picList":["https://i-blog.csdnimg.cn/direct/7a7d059196964bf18691913a46d63388.png"],"collectCount":0,"tags":["windows"],"hasInsCode":false},{"articleId":144826960,"title":"要快速找到 A, B, C 使得 A×B×Cx4/13 最接近 D","description":"A取值范围 为(64, 128, 256,1024),B为（1-255），C为（1-256）D的取值范围是[0,66846720]","url":"https://blog.csdn.net/aerror/article/details/144826960","type":1,"top":false,"forcePlan":false,"viewCount":398,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144826960","postTime":"2024-12-30 15:31:22","diggCount":6,"formatTime":"2024.12.30","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/671f42ab07fd990f949a1c903140dd83.png"],"collectCount":5,"tags":["算法","人工智能"],"hasInsCode":false},{"articleId":144806630,"title":"计算intel hex文件占用空间大小","description":"只是需要使用sdcc的make的时候，最后打印一下hex文件占用flash的大小和百分比，试了srec_info ， python 的intelhex等，好像都不是需要的。没有办法，只好自己使用shell脚本写一个。保存为showsize.sh,使用例子如下。","url":"https://blog.csdn.net/aerror/article/details/144806630","type":1,"top":false,"forcePlan":false,"viewCount":145,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144806630","postTime":"2024-12-29 16:33:12","diggCount":1,"formatTime":"2024.12.29","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/db3787141d668b1b21ce6510b847fa3b.png"],"collectCount":0,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":144746402,"title":"Frida转指针类型强转成float","description":"2.使用内存读写来转，速度应该感觉快些。","url":"https://blog.csdn.net/aerror/article/details/144746402","type":1,"top":false,"forcePlan":false,"viewCount":201,"commentCount":2,"editUrl":"https://mp.csdn.net/console/editor/html/144746402","postTime":"2024-12-26 15:48:44","diggCount":2,"formatTime":"2024.12.26","picList":["https://i-blog.csdnimg.cn/direct/044b1d7840364d038b048e658ff0845c.png"],"collectCount":0,"tags":["算法"],"hasInsCode":false},{"articleId":144664395,"title":"arm64 取一个32位数除以10的余数计算","description":"【代码】arm64 取一个32位数除以10的余数计算。","url":"https://blog.csdn.net/aerror/article/details/144664395","type":1,"top":false,"forcePlan":false,"viewCount":146,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144664395","postTime":"2024-12-23 13:54:29","diggCount":2,"formatTime":"2024.12.23","picList":["https://i-blog.csdnimg.cn/blog_migrate/tags/8a4bfa4a5d53ce03efff2abd920b6ca4.png"],"collectCount":0,"tags":["前端"],"hasInsCode":false},{"articleId":144271470,"title":"推荐一个好用的lua反编译工具","description":"https://github.com/Aussiemon/ljd/","url":"https://blog.csdn.net/aerror/article/details/144271470","type":1,"top":false,"forcePlan":false,"viewCount":319,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144271470","postTime":"2024-12-05 17:08:33","diggCount":2,"formatTime":"2024.12.05","picList":[],"collectCount":0,"tags":["前端"],"hasInsCode":false},{"articleId":144148289,"title":"使用命令行来刷写ELRS接收器的固件","description":"使用ExpressLRS Configurator的自带编译好的python命令。","url":"https://blog.csdn.net/aerror/article/details/144148289","type":1,"top":false,"forcePlan":false,"viewCount":527,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144148289","postTime":"2024-11-30 00:04:34","diggCount":2,"formatTime":"2024.11.30","picList":[],"collectCount":1,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":144058969,"title":"编译lz4-java","description":"这个项目上一个版本是2021年了，好久没有人维护了，我们需要升级一个lz4的到1.10.0, 以提升性能速度.1.下载ant1.10.15 ， 解压后，设path的bin下面，java安装1.8以上。3. 更新lz4的子模块。","url":"https://blog.csdn.net/aerror/article/details/144058969","type":1,"top":false,"forcePlan":false,"viewCount":312,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/144058969","postTime":"2024-11-26 15:18:00","diggCount":2,"formatTime":"2024.11.26","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/db3787141d668b1b21ce6510b847fa3b.png"],"collectCount":0,"tags":["java","开发语言"],"hasInsCode":false},{"articleId":143803487,"title":"如何使用gdb动态调试pyhon程序","description":"但凡安装了python，安装目录下都有一个, 不知道在什么地方可以find一下，然后source一下，或者加下.gdbinit里面。然后就可以使用py开头的命令了，如py-bt。然后gdb -p pid。","url":"https://blog.csdn.net/aerror/article/details/143803487","type":1,"top":false,"forcePlan":false,"viewCount":273,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/143803487","postTime":"2024-11-15 17:08:53","diggCount":2,"formatTime":"2024.11.15","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/451bd3cb0200ebe9bda02f699c8b39d1.png"],"collectCount":0,"tags":["linux","运维","服务器"],"hasInsCode":false},{"articleId":143403930,"title":"GDB像xxd一样查看内存数据","description":"希望可以像xxd一样，分两栏，左右是16进制，右边是ascii的字符串，自定义一个命令即可，如下。","url":"https://blog.csdn.net/aerror/article/details/143403930","type":1,"top":false,"forcePlan":false,"viewCount":200,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/143403930","postTime":"2024-10-31 16:01:48","diggCount":3,"formatTime":"2024.10.31","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/8a4bfa4a5d53ce03efff2abd920b6ca4.png"],"collectCount":0,"tags":["linux","服务器","前端"],"hasInsCode":false},{"articleId":143363500,"title":"MacOS如何读取磁盘原始的扇区内容，恢复误删除的数据","description":"按上面的原理，我们可以使用代码来一个一个扇区的查找我们丢失数据。我丢了一个android的签名keystore, 用遍了网上的工具都没有找到。我自己写了一个搜索扇区程序，尝试去恢复这个文件。这个就是读取 /dev/disk2这个磁盘每100这个sector, bs表示扇区大小是512.先使用diskutil list找到这磁盘的挂载。你需要把这个磁盘umount下来。然后umount它的挂载。","url":"https://blog.csdn.net/aerror/article/details/143363500","type":1,"top":false,"forcePlan":false,"viewCount":571,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/143363500","postTime":"2024-10-30 14:41:07","diggCount":2,"formatTime":"2024.10.30","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/e658252d918e15d0df73656bca64a96f.png"],"collectCount":0,"tags":["macos"],"hasInsCode":false},{"articleId":143083474,"title":"Arduino 1.8 无法启动，闪屏过后，卡死，不出主界面解决方案","description":"6.折腾了好久，我觉得可能是arduino ide2.x安装一些东西，而arduino 1.8.9也使用了这些东西，导致问题。7. 最后在C:\\Users\\youuser\\appdata\\Local找到两个ariduino开头的文件夹，有一个文件夹很大，先多东西，把他们都删除了，发现问题解决！4.发现安装了arduino ide2.x， 顺便卸载了，然后再重新安装Arduino 1.8.9，也是一直的现象, 无效。突然打不开了，闪屏过后，不出主界面，一直这样，任务栏有图标。","url":"https://blog.csdn.net/aerror/article/details/143083474","type":1,"top":false,"forcePlan":false,"viewCount":617,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/143083474","postTime":"2024-10-19 20:34:02","diggCount":3,"formatTime":"2024.10.19","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":1,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":142456376,"title":"Frida如何获取Vector3(3个float)结构体的返回值","description":"经过我多次尝试和想像，我发现是这可以这样获取的，就是使用replace, 然后返回值定义成一个结构体的数组。在frida的文档里，没有任何描述如何获取这样的返回值。这个也是没有人可以回答。","url":"https://blog.csdn.net/aerror/article/details/142456376","type":1,"top":false,"forcePlan":false,"viewCount":288,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/142456376","postTime":"2024-09-23 13:59:37","diggCount":1,"formatTime":"2024.09.23","picList":["https://i-blog.csdnimg.cn/direct/44d6a5ed3edc4c9e90af73617cfffc33.png"],"collectCount":0,"tags":["笔记"],"hasInsCode":false},{"articleId":141475999,"title":"USB HID 协议实现详解","description":"但是请求的时候，往往比较当前说明的长，这个没有像之前那先尝试再请求，这里代码直接取两者最小返回即可。要是有多个接口（复合型的设备），IDX就是多个报告的下标索引。bmRequest  =  80  -D7 == 方向是设备至主机？wIndex =  00 00 当有多个hid设备，此为下标索引。wValue == 00 01 , 根据表5， 1 为设备描述符。wLenght 09 00    第一次 请求 09 字节，根据report定义，定时或触发性发送数据。收到 9 字节，数据结构如表8，知道长度。","url":"https://blog.csdn.net/aerror/article/details/141475999","type":1,"top":false,"forcePlan":false,"viewCount":1850,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/141475999","postTime":"2024-08-25 23:13:46","diggCount":7,"formatTime":"2024.08.25","picList":["https://i-blog.csdnimg.cn/direct/6b3e8a3ac1ce4f8393417d0cac3f43c2.png"],"collectCount":16,"tags":["网络"],"hasInsCode":false},{"articleId":141300619,"title":"STM32F0XX TIM1 CH2 INPUT CAPTURE 输入捕获PPM信号","description":"按文档的例子和其它例子都很少使用timer1的，不知道为什么，但是我想使用它，方便端口重用，我一开始使用tim1 ch3,死活不工作，搞了几天，没有办法换了一个ch2， 结果同样的代码就工作了。不知道为什么，希望看到的高手告知。（使用f103，timer1 的ch3同样的代码也没有问题。分享PPM的代码如下，是捕捉航模的PPM信号。","url":"https://blog.csdn.net/aerror/article/details/141300619","type":1,"top":false,"forcePlan":false,"viewCount":318,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/141300619","postTime":"2024-08-18 15:36:57","diggCount":3,"formatTime":"2024.08.18","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":0,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":140130616,"title":"当今最流行的推荐引擎算法有哪些？","description":"但事实上，推荐数据集与通常的计算机视觉数据集有很大不同，这使得使用现有的实现和工具变得更加复杂（例如，TensorFlow 或 PyTorch 等库中的许多优化器不支持稀疏更新动量，这是训练推荐深度模型的基石）。要训练解决项目冷启动（或用户冷启动）的模型，您需要一个数据集，其中包括项目（或用户的）的详细描述，例如电影的类型、预算、持续时间或任何可能有助于推荐的变量。由于推荐是使用用户对商品的反馈数据集计算得出的，因此它们无法推荐没有（或只有少量）反馈的商品，例如新商品。让我们看看每种方法的优点和缺点。","url":"https://blog.csdn.net/aerror/article/details/140130616","type":4,"top":false,"forcePlan":false,"viewCount":306,"commentCount":1,"editUrl":"https://mp.csdn.net/console/editor/html/140130616","postTime":"2024-07-02 16:38:20","diggCount":0,"formatTime":"2024.07.02","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/c245f41073507966b40ac570fe861b54.png"],"collectCount":1,"tags":["算法","python","人工智能"],"hasInsCode":false},{"articleId":139858406,"title":"MACOS VMWare Fusion无法将“Ethernet0”连接到虚拟网络“/dev/vmnet8”","description":"以为是vmware的，使用上面的命令把vmnet都停了，发现还在。ifconfig 看了一下，发信息多了一个bridge..到 系统偏好设置->共享->互联网共享 这个关掉。各项服务启动也是正常的，但是就是vm没有网络了。想了半天，原来是在wifi上打开了共享互联网。记录一下，备忘和帮忙遇到同样问题的人。一直好端端的，突然打开vm提示这个。启动vmware的那堆服务器。再打开vm， 发现不提示。查了一下，应该是网络有关。这个bridge不见了。开机vm的网络也正常了。","url":"https://blog.csdn.net/aerror/article/details/139858406","type":1,"top":false,"forcePlan":false,"viewCount":1304,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/139858406","postTime":"2024-06-21 13:18:24","diggCount":5,"formatTime":"2024.06.21","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/e658252d918e15d0df73656bca64a96f.png"],"collectCount":0,"tags":["macos"],"hasInsCode":false},{"articleId":138650931,"title":"小米poco x3 pro adbd 以root权限启动提供服务","description":"8. 在mout的目录下的apex/com.android.adbd，找到adbd,复制出来，上传到手机的/data/local, 并加上执行权限。4. fastboot flash recoery   twrp-3.7.1_12-0-vayu.img, 安装magisk, termux。6. 解压aosp_arm64-img-11718355.zip, 把system.img转成ext2,9.下载system_properties_arm64，上传到/data/local,并加上执行权限，","url":"https://blog.csdn.net/aerror/article/details/138650931","type":1,"top":false,"forcePlan":false,"viewCount":11050,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/138650931","postTime":"2024-05-10 10:10:28","diggCount":3,"formatTime":"2024.05.10","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/451bd3cb0200ebe9bda02f699c8b39d1.png"],"collectCount":3,"tags":["linux","运维","服务器"],"hasInsCode":false},{"articleId":136935072,"title":"如何grep excel文件，在excel文件查找到字符串","description":"当我们遇到一堆excel文件，我们想通过关键字去定位一下它在那些excel文件中存在，怎么办？直接grep是肯定不行的。1. 安装 xls2txt或xlsx2csv，把excel转txt再用grep。2. 安装xlsxgrep。","url":"https://blog.csdn.net/aerror/article/details/136935072","type":1,"top":false,"forcePlan":false,"viewCount":459,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/136935072","postTime":"2024-03-22 11:07:49","diggCount":1,"formatTime":"2024.03.22","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/a3f44b02e67d2b4f6bea142cd967f1a3.png"],"collectCount":0,"tags":["excel"],"hasInsCode":false},{"articleId":136353455,"title":"开源BLHELI-S 代码详细解读(五）","description":"总体思想是根据电机运行状态计算前4次换相时间，然后根据前4次换相时间计算15度和7.5度电角度时间，换相之后延时7.5度电角度开始检测过零点，检测到过零点后延时15度电角度进行换相。我们继续来看calc_next_comm_timing, 每次操作完换相之后，这里都会调用，同时会设置timer3去等advance timing.","url":"https://blog.csdn.net/aerror/article/details/136353455","type":1,"top":false,"forcePlan":false,"viewCount":612,"commentCount":4,"editUrl":"https://mp.csdn.net/console/editor/html/136353455","postTime":"2024-03-01 13:28:33","diggCount":2,"formatTime":"2024.03.01","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":2,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":136334495,"title":"如何编译BLHELI 及BLHELI_S","description":"开头改成SilabsPath和 RaisonancePath你安装所在路径。BLHELI_S目录下，修改一下MakeHesfiles.bat。3. BLHeli目录下修改MakeHesfiles.bat。开头，改成KeilPath你安装 的目录。就可以双击编译BLHELI_S了。下载Ride和RKit-51。就可以双击编译BLHELI了。这里只说silab的两个版本。","url":"https://blog.csdn.net/aerror/article/details/136334495","type":1,"top":false,"forcePlan":false,"viewCount":619,"commentCount":4,"editUrl":"https://mp.csdn.net/console/editor/html/136334495","postTime":"2024-02-27 23:58:45","diggCount":3,"formatTime":"2024.02.27","picList":[],"collectCount":4,"tags":["单片机"],"hasInsCode":false},{"articleId":136061806,"title":"开源BLHELI-S 代码详细解读(四）","description":"如Set_Pwm_C，   P1SKIP =  37h(00110111b), 即P1.3 P1.6和 P1.7会给外设使用，  根据优先度，PCA0的CEX0会使用P1.3(CpwmFET)输出 CEX1 会在P1.6(CcomFET)输出。这个 wait_before_zc_scan，其实比较简单，就是从把timer3的超时设置为Comm_Period4x_L和Comm_Period4x_H, 只有在STARTUP_PHASE和 SHL INITIAL_RUN_PHASE阶段才会设置。","url":"https://blog.csdn.net/aerror/article/details/136061806","type":1,"top":false,"forcePlan":false,"viewCount":965,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/136061806","postTime":"2024-02-20 10:56:07","diggCount":6,"formatTime":"2024.02.20","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":11,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":136030320,"title":"开源BLHELI-S 代码详细解读(三）","description":"如果不满足，则跳到run_to_wait_for_power_on_fail，这里上一篇有详细读了，是一些失败的检查，最坏会跳回init_no_signal。B. 否则就是在启动的阶段（STARTUP_PHASE），这里会将Startup_Zc_Timeout_Cntd减1(超时次数，wait_before_zc_scan会把它设置成2)，要是它还不是0，就跳到comp_check_timeout_extend_timeout,再调用setup_zc_scan_timeout。","url":"https://blog.csdn.net/aerror/article/details/136030320","type":1,"top":false,"forcePlan":false,"viewCount":1252,"commentCount":3,"editUrl":"https://mp.csdn.net/console/editor/html/136030320","postTime":"2024-02-06 19:36:56","diggCount":22,"formatTime":"2024.02.06","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/6b859b3f626db9c64f97c48293b82211.png"],"collectCount":12,"tags":["单片机"],"hasInsCode":false},{"articleId":135925136,"title":"开源BLHELI-S 代码详细解读(二）","description":"DIR_CHANGE_BRAKE没有设置的话，就跳到run_to_wait_for_power_on，不是的话，清除DIR_CHANGE_BRAKE的标志，清除PGM_DIR_REV标志，要是RCP_DIR_REV有设置，那么设置PGM_DIR_REV，然后把当前的阶段设置回INITIAL_RUN_PHASE。run_to_wait_for_power_on_fail是由前面的wait_for_comp_out_low和wait_for_comp_out_high的异常读取触发的。","url":"https://blog.csdn.net/aerror/article/details/135925136","type":1,"top":false,"forcePlan":false,"viewCount":2566,"commentCount":4,"editUrl":"https://mp.csdn.net/console/editor/html/135925136","postTime":"2024-02-04 17:28:14","diggCount":24,"formatTime":"2024.02.04","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/5fbe5c9a62364bdd8b20b324d539762a.png"],"collectCount":24,"tags":["无刷电调"],"hasInsCode":false},{"articleId":135883072,"title":"开源BLHELI-S 代码详细解读(一）","description":"Pgm_Beacon_Delay会和Power_On_Wait_Cnt_H相减，要是借位，就会开始beep f4, beep一次Power_On_Wait_Cnt_H会减1，就是Power_On_Wait_Cnt_L是255的时候beep一次了。如果有信号（Rcp_Timeout_Cntd不是零），同时New_Rcp(油门)不是零跳到 wait_for_power_on_nonzero， 再检查一次Rcp_Timeout_Cntd是不是零，要是不是零，那就跳到init_start。这个代码在inc里。","url":"https://blog.csdn.net/aerror/article/details/135883072","type":1,"top":false,"forcePlan":false,"viewCount":3168,"commentCount":6,"editUrl":"https://mp.csdn.net/console/editor/html/135883072","postTime":"2024-01-29 15:52:24","diggCount":26,"formatTime":"2024.01.29","picList":[],"collectCount":45,"tags":["单片机"],"hasInsCode":false},{"articleId":135671929,"title":"使用GDB动态补丁ARM64的程序 跳转到任意地址","description":"正常的 arm64跳转转令B,BL,BLX只有+-128M, 我们很多时候要跳到大于这个值的地址。我们在arm64下可以选的指令就只有br指令了。原来在ARM/Thumb中使用的 ldr pc, [pc, #?] ， 但arm64是不能这样了。但是它也需要给一个寄存器赋值一个64bit的地址， 可是arm的指令是固定的32bit的，即使给一个寄存器赋值一个64bit的值都麻烦。如 set *(int*)0xabc1234 = 0x58000070。补丁就是简单了，就是直接使用set命令就好了。","url":"https://blog.csdn.net/aerror/article/details/135671929","type":1,"top":false,"forcePlan":false,"viewCount":683,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135671929","postTime":"2024-01-18 13:44:58","diggCount":7,"formatTime":"2024.01.18","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/451bd3cb0200ebe9bda02f699c8b39d1.png"],"collectCount":10,"tags":["linux","运维","服务器"],"hasInsCode":false},{"articleId":135671769,"title":"GDB 调用无符号的任意函数","description":"我们知道有符号的函数调用很简单了，直接像写c语言一样传参调用即可。但是无符号的就不知道怎么弄了，查遍了整个网络我都没有查到怎么做。5. until命令执行完成，说明函数也执行完成了，因为是返回地址设置了。1. 保存好所有的现场，如寄存器，当前pc,  返回地址，堆栈等。例子是调用一个对象转json的无符号函数，然后打印它返回的结果。6. 如果有需要打印一些结果，如p/x x0.4. 使用until 命令到执行到的返回地址。2. 替换返回地址，为当前指令下一个地址。3. 设置pc去执行函数，","url":"https://blog.csdn.net/aerror/article/details/135671769","type":1,"top":false,"forcePlan":false,"viewCount":595,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135671769","postTime":"2024-01-18 13:18:30","diggCount":6,"formatTime":"2024.01.18","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/9135a2d9ba113b74b25eef58f55a9697.png"],"collectCount":11,"tags":["php","开发语言"],"hasInsCode":false},{"articleId":135640545,"title":"LUA 对象转excel","description":"因为是excel, 所以第一层要是数组，否则没有什么意义，这里使用开源的json.lua， 但是开源的，对于数字作下标的，或者是一个数组里，不意类型的key混合的情况无法转换，所以先进行了扫描判断是不是混合的key. 是的话，取消key,把key到结构里作为一个字段处理。","url":"https://blog.csdn.net/aerror/article/details/135640545","type":1,"top":false,"forcePlan":false,"viewCount":1105,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135640545","postTime":"2024-01-17 09:18:43","diggCount":11,"formatTime":"2024.01.17","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/c9c219e8c8e420cf8fea55aafeda5335.png"],"collectCount":9,"tags":["lua","excel","junit"],"hasInsCode":false},{"articleId":135535813,"title":"JS 解析RGB控制台终端输出有颜色的LOG","description":"RGB转consolecolor是自己了随便写的，差不多就算了。可以解析一下html的颜色输出log, 在终端打印成相近的颜色。","url":"https://blog.csdn.net/aerror/article/details/135535813","type":1,"top":false,"forcePlan":false,"viewCount":494,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135535813","postTime":"2024-01-11 17:56:23","diggCount":7,"formatTime":"2024.01.11","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/8a4bfa4a5d53ce03efff2abd920b6ca4.png"],"collectCount":7,"tags":["javascript","前端","vue.js"],"hasInsCode":false},{"articleId":135500509,"title":"FRIDA 调用原生函数时使用补丁也生效","description":"即，你补丁了一下函数，你去调用它，发现你使用frida打的补丁和hook不生效。1. 补丁函数必须使用。","url":"https://blog.csdn.net/aerror/article/details/135500509","type":1,"top":false,"forcePlan":false,"viewCount":467,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135500509","postTime":"2024-01-10 12:39:14","diggCount":7,"formatTime":"2024.01.10","picList":[],"collectCount":6,"tags":["android"],"hasInsCode":false},{"articleId":135440688,"title":"双向双路电调双流差速算法","description":"这个很简单，就是直接使用油门+转向混合就好，超限的截掉，算法如下。","url":"https://blog.csdn.net/aerror/article/details/135440688","type":1,"top":false,"forcePlan":false,"viewCount":498,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135440688","postTime":"2024-01-07 15:53:40","diggCount":9,"formatTime":"2024.01.07","picList":[],"collectCount":10,"tags":["算法","java","前端"],"hasInsCode":false},{"articleId":135429039,"title":"如何绕过pairip的防护","description":"签名绕过的第二个办法是不要改dex, 改一下androidmanifest.xml, 把 com.pairip.application.Application改成android.app.Application. 原理很是com.pairip.application.Application继承android.app.Application， 只是多了一些签名验证，刚好我们不需要，使用基类跑就好了。然后libpairip会开线程，开定时检查一些gdb和frida之类的，检查到就会来个异常把进程搞死.","url":"https://blog.csdn.net/aerror/article/details/135429039","type":1,"top":false,"forcePlan":false,"viewCount":3187,"commentCount":6,"editUrl":"https://mp.csdn.net/console/editor/html/135429039","postTime":"2024-01-06 17:16:08","diggCount":7,"formatTime":"2024.01.06","picList":[],"collectCount":12,"tags":["android"],"hasInsCode":false},{"articleId":135428689,"title":"三星galaxy s9 root教程","description":"11.  刷完后因为去掉了auto reboot, 是不会重启的，这个时候按 Volume down + blix + 电源键, 让它重启，这里很重要的一点，就是你必须在关键的一刻，你按键切换成 Volume Up +  blix + 电源键, 等到看到三星的logo，你松开电源键， 保持按住  Volume Up +  blix， 等几秒就看到twrp的界面。8.  按住音量 减（volume down) + blix + 电源键 ， 7秒后，进入刷机模式，按 volume up。","url":"https://blog.csdn.net/aerror/article/details/135428689","type":1,"top":false,"forcePlan":false,"viewCount":4008,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/135428689","postTime":"2024-01-06 17:05:06","diggCount":7,"formatTime":"2024.01.06","picList":[],"collectCount":7,"tags":["android"],"hasInsCode":false},{"articleId":132816898,"title":"超简单免费转换ape到flac","description":"4.到ape所在的目录，执行以下命令。3. 设置path到ffmpeg。1. 安装最新版的ffmpeg。2. 安装cywin环境。","url":"https://blog.csdn.net/aerror/article/details/132816898","type":1,"top":false,"forcePlan":false,"viewCount":806,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/132816898","postTime":"2023-09-11 20:24:29","diggCount":0,"formatTime":"2023.09.11","picList":[],"collectCount":0,"tags":["音视频"],"hasInsCode":false},{"articleId":131407302,"title":"使用arduino Nano 自制nRF24LE1 的烧录器进行固件烧录","description":"4.解压program.zip得到一个烧录的命令行工具，执行命令进行write或dump。3.  实质是spi下载来的，接线， nRF24LE1是3.3设备，别接5v。也有专门usb编程器，比较贵，可以买个arduino nano自已做一个。需要自己数一下多少pin的，然后和arduino的脚接起来.2. 使用arduino编译烧录固件。1. 下载arduino的烧录固件。","url":"https://blog.csdn.net/aerror/article/details/131407302","type":1,"top":false,"forcePlan":false,"viewCount":1082,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/131407302","postTime":"2023-06-26 23:36:43","diggCount":0,"formatTime":"2023.06.26","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/20cc144273995f9843f385205390a13b.png"],"collectCount":1,"tags":["嵌入式硬件"],"hasInsCode":false},{"articleId":131366245,"title":"stm32flash碰到hex文件出错，读取超慢, 占用内存超多的问题解决","description":"这个问题是因为sdcc生成的hex的每行的地址并不是排序的好的，有些高的地址在前面，低的地址在后面，这样的话，stm32flash这个hex.c并不能处理这个情况。里面有一个逻辑是用来填补0xff的，当后面的地址比前面大，一减得负数，但是变量是无符号的，结果就变成了4.2G了，然后一碰到一次就申请4.2G内存，然后填充0xff, 结果读了一个几十k的hex耗时十分钟，还占用超多内存，然后内存还是错的。解决办法，可以使用srec_cat把hex处理一下，输出的文件的地址就是排序好了。","url":"https://blog.csdn.net/aerror/article/details/131366245","type":1,"top":false,"forcePlan":false,"viewCount":461,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/131366245","postTime":"2023-06-24 20:47:22","diggCount":0,"formatTime":"2023.06.24","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":0,"tags":["stm32","单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":131363680,"title":"MacOs 下用于性能优化的“perf“命令","description":"MacOs下面没有这个命令，但有类似的，也是非常方便，它就是 Instruments， 是xcode自带一个性能分析和自动化测试的工具。需要安装Xcode.以下使用例子。","url":"https://blog.csdn.net/aerror/article/details/131363680","type":1,"top":false,"forcePlan":false,"viewCount":1713,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/131363680","postTime":"2023-06-24 17:00:06","diggCount":0,"formatTime":"2023.06.24","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/364a602a8bad7ea2eac698e2443fe93c.png"],"collectCount":0,"tags":["macos","xcode","ide"],"hasInsCode":false},{"articleId":131339313,"title":"一个TIMER软件模拟输出6个PWM","description":"51单片机的timer很少，往往16bit的timer只有一个，可以硬件输出的channel也不多。只能使用软件模拟了。pwm是1-20ms一个周期，要是设置一个固定的周期，中断间隔就必须比较小，如0.01ms , 这个精度已经不怎么样了，但是每秒还是需要100000次中断，对于51来说，这个压力很大，实测效果很差。1. pwm需要每20ms对pin脚操作两次，周期开始设置它为1，到达指定时间时设置它为0，这个宽度，在航模的信号里，是1-2ms之间。我们将6个通道，每个分时3ms给它做这第一项的两次设置。","url":"https://blog.csdn.net/aerror/article/details/131339313","type":1,"top":false,"forcePlan":false,"viewCount":923,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/131339313","postTime":"2023-06-22 12:36:54","diggCount":0,"formatTime":"2023.06.22","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/2b366d0b9167fcaaaa7176da0c026513.png"],"collectCount":3,"tags":["51单片机","嵌入式硬件","单片机"],"hasInsCode":false},{"articleId":128728196,"title":"高通Qualcomm处理器的手机或设备进EDL 9008模式的办法","description":"由于我们有很多基于 Qualcomm 的设备，其中一些设备可能会古怪地猜测如何进入 EDL 模式，或者如何正确进入。例如，对于 Alcatel，您必须先按住两个音量键，然后再按住其中一个，对于 CAT B35，您必须按住 * 和 #，对于 8110，您必须按住 Up 和 Down，在此期间您必须插入电缆。因此，一个非常简单的电缆模块（一个穷人的夹具）就派上用场了，它根本不需要焊接。1. 拿一根备用的 microUSB 数据线，剥去中间某处的绝缘层。3.将USB端连接到PC，按住剥开的线约5秒钟。","url":"https://blog.csdn.net/aerror/article/details/128728196","type":1,"top":false,"forcePlan":false,"viewCount":4479,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/128728196","postTime":"2023-01-18 16:57:40","diggCount":0,"formatTime":"2023.01.18","picList":[],"collectCount":3,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":128661408,"title":"一个无线鼠标的HID Report Desc","description":"【代码】一个无线鼠标的HID Report Desc。","url":"https://blog.csdn.net/aerror/article/details/128661408","type":1,"top":false,"forcePlan":false,"viewCount":846,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/128661408","postTime":"2023-01-12 15:58:15","diggCount":1,"formatTime":"2023.01.12","picList":[],"collectCount":5,"tags":["嵌入式硬件"],"hasInsCode":false},{"articleId":126694561,"title":"stm32 硬件spi半双工三线的一些研究心得","description":"这个根据工作原理分析了一下，为什么在这样，主要是因为我们的读的时候，要是这个速度高，我们的mcu还没有去禁用SPI停时钟这个太慢了，上面代码已经在判断到RXNE时马上disable SPI了，但是明显，这个还是不够快。a7105可以使用四线spi,或者3线spi, 但是之前都是使用3线的软件模拟的三线spi的，所以不想改其它代码了，就想可以提高一个spi的读写速度，原来软件方式的读写速度，在48Mhz的03x下面，大约速度是1.6mbs,使用硬件spi之后，最终大约速度为12mbs.","url":"https://blog.csdn.net/aerror/article/details/126694561","type":1,"top":false,"forcePlan":false,"viewCount":7490,"commentCount":2,"editUrl":"https://mp.csdn.net/console/editor/html/126694561","postTime":"2022-09-04 21:52:42","diggCount":12,"formatTime":"2022.09.04","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/28442baf755a43a06d31c3a2cc43a265.png"],"collectCount":58,"tags":["stm32","单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":126064047,"title":"如何在windows下编译UEFITOOL","description":"UEFITOOL 编译","url":"https://blog.csdn.net/aerror/article/details/126064047","type":1,"top":false,"forcePlan":false,"viewCount":984,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/126064047","postTime":"2022-07-30 15:52:44","diggCount":0,"formatTime":"2022.07.30","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/c3a921c902eccb7cedaa111df630a7a8.png"],"collectCount":1,"tags":["windows"],"hasInsCode":false},{"articleId":125385217,"title":"富斯，迈克，天地飞4合1接收机说明书","description":"（上图，飞机用的接收机）（上图，车用的接收机） A:   一 首先遥控器开机进入对码模式，      二 接收机上电，      三 静待45秒，即可自动完成对码。   一 关闭遥控器   二  接收机上电三 静待40秒，直到接收机进入每1秒1亮1灭慢闪四打开遥控器，接收块闪，然后常亮，对码完成A： FLLYSKY，天地飞:一. 关掉原来的摇控器，       二. 关掉接收机电源       三. 打开新的遥控器开机进入对码模式       四. 接收机上电，       五。 静待45秒，即可自动完成对","url":"https://blog.csdn.net/aerror/article/details/125385217","type":1,"top":false,"forcePlan":false,"viewCount":14625,"commentCount":2,"editUrl":"https://mp.csdn.net/console/editor/html/125385217","postTime":"2022-06-21 11:41:36","diggCount":11,"formatTime":"2022.06.21","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/fc4bfbae9271961ee0bf76b441eaaaf4.png"],"collectCount":43,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":124800906,"title":"MC6C迈克/FLYSKY富斯/WFLY2天地飞二代接收机远程刷固件教程","description":"1. 安装ch341的驱动程序CH340/CH341 Windows串口驱动安装 - 南京沁恒微电子股份有限公司CH341SER.EXE - 南京沁恒微电子股份有限公司2.ch341的跳线跳到usb To ttl3.接收机飞线4.连接5v, RX, TX GND 到接收机的+,3, 1 ,G5.下载stm32isp程序安装6. 接上ch341到电脑7. 打开stm32isp程序8.输入密码，密码找卖家要，点击登录9.点击下载10. 拆除接收机飞线........","url":"https://blog.csdn.net/aerror/article/details/124800906","type":1,"top":false,"forcePlan":false,"viewCount":3677,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/124800906","postTime":"2022-05-16 16:21:21","diggCount":0,"formatTime":"2022.05.16","picList":[],"collectCount":1,"tags":["单片机","stm32","嵌入式硬件"],"hasInsCode":false},{"articleId":124298189,"title":"富斯/MC6接收机说明书","description":"正面 反面1. PWM输出通道多达6个， 可以自由切换7种模式，自由选择无刷，有刷，差速，炫酷的RGB全彩灯带等，自由玩耍。2. 集成两个5A有刷电调，通过模式选择，可以双发，可差速，支持8250以下的空心杯有刷电机3. 支持16通(MC6/7C 14通)sbus(第15通是RSSI),9通ppm（第9通是RSSI）,可以接飞控，飞fpv. 4. 支持Failsafe失控保护，只需要直接在摇控器的Fail...","url":"https://blog.csdn.net/aerror/article/details/124298189","type":1,"top":false,"forcePlan":false,"viewCount":12290,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/124298189","postTime":"2022-04-20 15:09:42","diggCount":4,"formatTime":"2022.04.20","picList":[],"collectCount":23,"tags":["单片机"],"hasInsCode":false},{"articleId":122284559,"title":"自制2.4G ELRS接收机，不需要打板，容易制作","description":"制作难度：中等，主要是器件太小，焊接需要耐心一。硬件材料1.LoRa射频模块，sx1280 ： E28-2G4M12S2.MCU Wifi模块：ESP-01F3.各色硅胶软线若干4.1k电阻5. TTL转串口 CH341 （CH340或FTDI随便一个即可。）6. DC-DC3.3v降压模块7. LED灯一个。二。软件：1. EpressLRS Configuratorhttps://github.com/ExpressLRS/ExpressLRS-Configu..","url":"https://blog.csdn.net/aerror/article/details/122284559","type":1,"top":false,"forcePlan":false,"viewCount":10346,"commentCount":6,"editUrl":"https://mp.csdn.net/console/editor/html/122284559","postTime":"2022-01-03 10:54:52","diggCount":5,"formatTime":"2022.01.03","picList":[],"collectCount":33,"tags":["嵌入式硬件","单片机"],"hasInsCode":false},{"articleId":122283917,"title":"自制2.4G ELRS TX高频头, 内置于富斯i6","description":"制作难度：容易一。硬件材料：1.LoRa射频模块，sx1280 ： E28-2G4M27S2.MCU Wifi模块：ESP-WROOM323.各色硅胶软线若干4.1k电阻5.富斯FS I6摇控器6.JLink一个，刷写固件用7. 2.4G天线一个软件：1. EpressLRS Configuratorhttps://github.com/ExpressLRS/ExpressLRS-Configurator2.我写的的FSi6固件, ERFLY6,GitHub...","url":"https://blog.csdn.net/aerror/article/details/122283917","type":1,"top":false,"forcePlan":false,"viewCount":9086,"commentCount":31,"editUrl":"https://mp.csdn.net/console/editor/html/122283917","postTime":"2022-01-03 10:01:54","diggCount":8,"formatTime":"2022.01.03","picList":[],"collectCount":33,"tags":["单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":122257924,"title":"STM32 LL库使用SPI读写","description":"void Rfchip_Spi_Init(void){ LL_GPIO_ResetOutputPin(GPIOA,LL_GPIO_PIN_5); LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_7); RFChip_Disable;}void Rf_Spi_Write_Byte(uint8_t dat){ LL_GPIO_ResetOutputPin(GPIOA,LL_GPIO_PIN_5); LL_GPIO_Se...","url":"https://blog.csdn.net/aerror/article/details/122257924","type":1,"top":false,"forcePlan":false,"viewCount":3486,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/122257924","postTime":"2021-12-31 15:51:02","diggCount":0,"formatTime":"2021.12.31","picList":[],"collectCount":2,"tags":["stm32","嵌入式硬件","单片机"],"hasInsCode":false},{"articleId":122257900,"title":"STM32 LL库 操作FLASH 保存数据","description":"#include \"string.h\"#include \"stm32f1xx_ll_system.h\"#define FLASH_PAGE_SIZE ((uint32_t)0x00000400)#define LL_FLASH_GET_FLAG(__FLAG__) (((__FLAG__) == FLASH_FLAG_OPTVERR) ? \\                      (FLASH->OBR & FLASH_OBR_OPT...","url":"https://blog.csdn.net/aerror/article/details/122257900","type":1,"top":false,"forcePlan":false,"viewCount":1989,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/122257900","postTime":"2021-12-31 15:50:09","diggCount":1,"formatTime":"2021.12.31","picList":[],"collectCount":1,"tags":["stm32","嵌入式硬件","单片机"],"hasInsCode":false},{"articleId":121315740,"title":"STM32 使用 LL库进行I2C读写","description":"为什么要使用LL库，因为生成的固件大小可以小很多很多，MCU贵呀，可以省很多成本了。uint8_t i2c_read_len(I2C_TypeDef *I2Cx, uint8_t Addr , uint8_t Reg, uint8_t len,uint8_t *buf)；uint8_t i2c_write_len(I2C_TypeDef *I2Cx, uint8_t addr , uint8_t reg, uint8_t len,uint8_t *buf)；实现这两个函数，理论上全...","url":"https://blog.csdn.net/aerror/article/details/121315740","type":1,"top":false,"forcePlan":false,"viewCount":6895,"commentCount":3,"editUrl":"https://mp.csdn.net/console/editor/html/121315740","postTime":"2021-12-31 15:46:45","diggCount":11,"formatTime":"2021.12.31","picList":[],"collectCount":42,"tags":["stm32","单片机","嵌入式硬件"],"hasInsCode":false},{"articleId":122257781,"title":"Freescale 飞思卡尔使用UART中断，单线UART","description":"1void setup_crsf_serial_port(uint32_t baud,crsf_read_cb_t read_cb){  if(g_crsf_read_callback==0)  {        g_crsf_read_callback = read_cb;      //uart_single_init(bdrate,DEFAULT_SYSTEM_CLOCK,bdrate);//Set single wire mode.      SIM->SCGC4 |= S","url":"https://blog.csdn.net/aerror/article/details/122257781","type":1,"top":false,"forcePlan":false,"viewCount":549,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/122257781","postTime":"2021-12-31 15:46:27","diggCount":0,"formatTime":"2021.12.31","picList":[],"collectCount":2,"tags":["单片机"],"hasInsCode":false},{"articleId":121247353,"title":"MacOS Arduino开发环境搭建和编译minimosd-extra","description":"1.从arduino官方网站：https://www.arduino.cc/en/Main/Software下载mac平台的IDE2.安装Arduino Makefile ，  git clone https://github.com/sudar/Arduino-Makefile.git3. 下载minimosd-extra源代码git clone https://github.com/night-ghost/minimosd-extra.git4.下载Sing...","url":"https://blog.csdn.net/aerror/article/details/121247353","type":1,"top":false,"forcePlan":false,"viewCount":461,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/121247353","postTime":"2021-11-10 14:21:27","diggCount":0,"formatTime":"2021.11.10","picList":[],"collectCount":1,"tags":["macos","arduino","minimosd"],"hasInsCode":false},{"articleId":121089957,"title":"STM32F103C6Tx CubeMx HAL I2c不工作原因","description":"发现使用STM32F103C8 i2c是可以工作了，要是cpu选STM32F103C6Tx发现生成代码i2c不工作，多次尝试和比较发现，STM32F103C6Tx生成的i2c的msp初始化gpio的时候少了一个速度的配置:  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;加上这行就正常工作了。汗。void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle){  GPIO_InitTyp...","url":"https://blog.csdn.net/aerror/article/details/121089957","type":1,"top":false,"forcePlan":false,"viewCount":2535,"commentCount":6,"editUrl":"https://mp.csdn.net/console/editor/html/121089957","postTime":"2021-11-01 22:03:56","diggCount":6,"formatTime":"2021.11.01","picList":[],"collectCount":21,"tags":["stm32","arm","嵌入式硬件"],"hasInsCode":false},{"articleId":119656642,"title":"Light Room Classic 9.4 MacOS闪退解决办法","description":"好像没有打开Light Room Classic, 今天打开发现slpash 出现之后就直接闪退，百思不解，好像很久什么都没有干呀。试一下把网络禁了，发现不闪了。 哦。。。。。原来如此。好吧，tcpdump分析一下，看看闪退之前访问了什么网络。sudo tcpdump -i en0 port 53Password:tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on e","url":"https://blog.csdn.net/aerror/article/details/119656642","type":1,"top":false,"forcePlan":false,"viewCount":2476,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/119656642","postTime":"2021-08-12 23:54:52","diggCount":0,"formatTime":"2021.08.12","picList":[],"collectCount":0,"tags":[],"hasInsCode":false},{"articleId":117046755,"title":"新唐n76e003单片机遥控PWM信号检测控制航灯系统","description":"第一次使用学习单片机编程, 使用了n76e003， 主要在检测pwm的信号问题上花了比较多的时间，最后是使用了timer2的0通道来捕捉上升缘，1通道来捕捉下降缘来检测pwm的宽度。接收机是0-2000us pwm输出，500-1000是基础的pwm, 就是说没有信号也定期输出500（舵机）或1000（油门），这样单片机可以检测到有无信号.timer0来控制led的开关和闪烁，timer0使用10khz， timer2使用16m的时钟.#include \"N76E003.h\"#incl.","url":"https://blog.csdn.net/aerror/article/details/117046755","type":1,"top":false,"forcePlan":false,"viewCount":1350,"commentCount":1,"editUrl":"https://mp.csdn.net/console/editor/html/117046755","postTime":"2021-05-19 21:15:21","diggCount":1,"formatTime":"2021.05.19","picList":[],"collectCount":6,"tags":["单片机","嵌入式"],"hasInsCode":false},{"articleId":114407774,"title":"android root了之后， jdb任何app","description":"设置 ro.debuggable， 那么全部app都是可以debuggable的，不需要修改manifest.","url":"https://blog.csdn.net/aerror/article/details/114407774","type":1,"top":false,"forcePlan":false,"viewCount":403,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/114407774","postTime":"2021-03-05 18:36:19","diggCount":0,"formatTime":"2021.03.05","picList":["https://i-blog.csdnimg.cn/blog_migrate/cover/b15c6791119fa1bec4afe2397d081db0.png"],"collectCount":0,"tags":["android"],"hasInsCode":false},{"articleId":112686250,"title":"小米10 adbd 以root权限启动提供服务","description":"之前写了类似的文章，但是这个文章办法不适用于小米10, 原文参考：https://blog.csdn.net/aerror/article/details/103270830主要有几个问题:1. supolicy这个在小米10 中root之后运行不起来，直接segment fault.2. 小米的文件系统remont 成rw失败,提示1|vangogh:/data/local # mount -o remount,rw /                ...","url":"https://blog.csdn.net/aerror/article/details/112686250","type":1,"top":false,"forcePlan":false,"viewCount":2388,"commentCount":1,"editUrl":"https://mp.csdn.net/console/editor/html/112686250","postTime":"2021-01-15 19:54:54","diggCount":0,"formatTime":"2021.01.15","picList":[],"collectCount":4,"tags":["android","shell"],"hasInsCode":false},{"articleId":110947271,"title":"编写ASCOM平台的驱动","description":"近来在玩天文，自己DIY了一个电动的调焦。ASCOM平台是一个天文的驱动和软件的开发标准，它是一个开源的开放平台。主要是使用了.net的技术。https://ascom-standards.org开发工具：1. Visual studion 2012/2013，太高的版本好像开发包不支持。2.Inno setup, 用来制作驱动的安装包，ascom的开发包，有自动生成这个安装脚本的工具，很方便3.开发文档：https://ascom-standards.org/Develop...","url":"https://blog.csdn.net/aerror/article/details/110947271","type":1,"top":false,"forcePlan":false,"viewCount":5471,"commentCount":8,"editUrl":"https://mp.csdn.net/console/editor/html/110947271","postTime":"2020-12-10 10:24:51","diggCount":4,"formatTime":"2020.12.10","picList":[],"collectCount":19,"tags":["驱动程序"],"hasInsCode":false},{"articleId":109380590,"title":"如何使用MacOs/IOS的私用不公开框架(PrivateFrameworks)","description":"我需要写个程序调用一下[PLSandboxHelper processCanReadSandboxForPath], 它是一个由AssetsLibraryServices.framework(/System/Library/PrivateFrameworks/AssetsLibraryServices.framework)提供的。有两个问题要解决：1. 没有这个的头文件， 编译就会不过2.Frameworks那里在 Link Binary With Library里没有列出PrivateFramew","url":"https://blog.csdn.net/aerror/article/details/109380590","type":1,"top":false,"forcePlan":false,"viewCount":3591,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/109380590","postTime":"2020-10-30 10:49:53","diggCount":0,"formatTime":"2020.10.30","picList":[],"collectCount":0,"tags":[],"hasInsCode":false},{"articleId":109365032,"title":"如何修改macOS 照片应用的原图片的目录路径","description":"磁盘系统坏了，是因为使用了HFS+ FOR WINDOWS 在macos和windows两边进行读写修改之类的，结果悲剧了，整个 HFS+的分区都变了成可读，也无法使用“急救”来修复。挂之前的现象的是写大文件会给截断，如8G的文件，copy过去，结果就变成了2G， 太坑了。。。好在还能读，赶紧把最重要的图片放到另一个硬盘上。放完之后，打开“照片”应用，提交原文件不可用，无法打开云云，于是尝试使用sqite3修复一下.1. 先把照片应用都退出ps axe | grep -i ph..","url":"https://blog.csdn.net/aerror/article/details/109365032","type":1,"top":false,"forcePlan":false,"viewCount":2703,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/109365032","postTime":"2020-10-29 17:59:41","diggCount":0,"formatTime":"2020.10.29","picList":[],"collectCount":1,"tags":["其他"],"hasInsCode":false},{"articleId":109338632,"title":"lldb调试objc程序使用正则表达式下断点","description":"ObjectC的函数名怪怪的，又空格，又+/-:号，又括号。下断点很麻烦。可以试试 -r选项 , 可以正则表达式来模糊下断点，还是比较方便了。如:(lldb) br set -r IPXReconnectManager initWithAsset:hostWindow:finishedBlock\\]Breakpoint 18: 20 locations.(lldb) breakpoint listCurrent breakpoints:18: regex = 'IPXRec.","url":"https://blog.csdn.net/aerror/article/details/109338632","type":1,"top":false,"forcePlan":false,"viewCount":483,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/109338632","postTime":"2020-10-28 17:44:19","diggCount":0,"formatTime":"2020.10.28","picList":[],"collectCount":0,"tags":[],"hasInsCode":false},{"articleId":108187163,"title":"Wacom 数位板 和冠 手绘笔 Photoshop MacOS 延时卡顿丢笔解决办法","description":"试了在macos的下面使用photoshop 笔画延时，经常画得快就偶尔丢几笔，直线变折线，查了以下：1. 关闭平滑2.关闭压力3.打开首选项－常规－性能,选择图形处理器设置－高级，将第一项改为正常或基本4. 关闭标尺5.点击画笔设置,勾选间距一栏，并将间距数值调整到40以上100以下...","url":"https://blog.csdn.net/aerror/article/details/108187163","type":1,"top":false,"forcePlan":false,"viewCount":7033,"commentCount":2,"editUrl":"https://mp.csdn.net/console/editor/html/108187163","postTime":"2020-08-23 20:25:02","diggCount":1,"formatTime":"2020.08.23","picList":[],"collectCount":0,"tags":["其他"],"hasInsCode":false},{"articleId":108171590,"title":"使用nghttp2实现IOS 的 APNS的推送测试例子","description":"能用代码就不废话#ifdef HAVE_CONFIG_H#  include <config.h>#endif /* HAVE_CONFIG_H */#include <inttypes.h>#include <stdlib.h># include <fcntl.h>#include <sys/types.h>#  include <sys/socket.h>#  include <netdb..","url":"https://blog.csdn.net/aerror/article/details/108171590","type":1,"top":false,"forcePlan":false,"viewCount":828,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/108171590","postTime":"2020-08-22 17:28:55","diggCount":0,"formatTime":"2020.08.22","picList":[],"collectCount":2,"tags":[],"hasInsCode":false},{"articleId":107709901,"title":"如何解开和反编译思科cisco的交换机固件","description":"下载固件，如image_tesla_hybrid_2.5.0.83_release_cisco_signed.bin1.下载安装 binwalkbrew install binwalk2.下载安装lzopbrew install loop3.使用binwalk解开文件binwalk -eM   image_tesla_hybrid_2.5.0.83_release_cisco_signed.bin4._image_tesla_hybrid_2.5.0.83_release","url":"https://blog.csdn.net/aerror/article/details/107709901","type":1,"top":false,"forcePlan":false,"viewCount":2396,"commentCount":5,"editUrl":"https://mp.csdn.net/console/editor/html/107709901","postTime":"2020-07-31 11:39:51","diggCount":1,"formatTime":"2020.07.31","picList":[],"collectCount":1,"tags":["交换机"],"hasInsCode":false},{"articleId":106952336,"title":"神牛TT685C闪光灯ETTL模式不同步解决方案","description":"相机闪光灯突然工作不正常了，虽然灯有闪但是闪了和没闪一样，严重曝光不足，遍查了网上也没发现解决方案。开机后按住 “Zm/C.Fn”按键 2 秒，进入 C.Fn 菜单。右上角显示 Ver 3.3 为版本号.发现 godox.com.cn/Downloads_s_Firmware.htmlTT685C_V3.4点击下载2019-05-071、解决与新相机EOS R、1500D、3000D的兼容问题。2、兼容神牛无线宾得(PENTAX)X系统。刚好是我的相机型号, 应该是要刷.","url":"https://blog.csdn.net/aerror/article/details/106952336","type":1,"top":false,"forcePlan":false,"viewCount":3967,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/106952336","postTime":"2020-06-24 22:57:56","diggCount":0,"formatTime":"2020.06.24","picList":[],"collectCount":0,"tags":[],"hasInsCode":false},{"articleId":106640660,"title":"编译php7 指定remi扩展目录和ini的配置目录","description":"安装了remi源的php74 , 想修改一下代码，使用回remi的配置和扩展,可以这样做：EXTENSION_DIR=/opt/remi/php74/root/usr/lib64/php/modules ./configure --prefix=/opt/remi/php74/root --with-config-file-path=/etc/opt/remi/php74/","url":"https://blog.csdn.net/aerror/article/details/106640660","type":1,"top":false,"forcePlan":false,"viewCount":1091,"commentCount":0,"editUrl":"https://mp.csdn.net/console/editor/html/106640660","postTime":"2020-06-09 14:27:36","diggCount":0,"formatTime":"2020.06.09","picList":[],"collectCount":0,"tags":[],"hasInsCode":false}],"total":175}}